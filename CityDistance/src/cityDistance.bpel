<?xml version="1.0" encoding="UTF-8" ?>
<process
    name="cityDistance"
    targetNamespace="http://enterprise.netbeans.org/bpel/CityDistance/cityDistance"
    xmlns:tns="http://enterprise.netbeans.org/bpel/CityDistance/cityDistance"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:sxt="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Trace" 
    xmlns:sxed="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Editor2"
    xmlns:sxat="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Attachment"
    xmlns:sxeh="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/ErrorHandling" xmlns:ns0="http://enterprise.netbeans.org/bpel/WizardCorrelationProperties" xmlns:sxnmp="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/NMProperty" xmlns:ns1="GeodataService" xmlns:ns2="http://j2ee.netbeans.org/wsdl/CityDistance/src/CityDistance" xmlns:ns3="http://j2ee.netbeans.org/wsdl/AsyncLength/src/AsyncLengthCallback" xmlns:ns4="http://j2ee.netbeans.org/wsdl/AsyncLength/src/AsyncLength" xmlns:ns5="http://j2ee.netbeans.org/wsdl/CityDistance/src/Geocode" xmlns:ns6="www.ab.fault.com">
    <import namespace="http://j2ee.netbeans.org/wsdl/CityDistance/src/CityDistance" location="CityDistance.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://j2ee.netbeans.org/wsdl/CityDistance/src/Geocode" location="Geocode.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://enterprise.netbeans.org/bpel/ServiceMaster.asmxWrapper" location="ServiceMaster.asmxWrapper.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="GeodataService" location="http://services.deserthail.com/GeodataService/ServiceMaster.asmx?WSDL" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://j2ee.netbeans.org/wsdl/AsyncLength/src/AsyncLength" location="AsyncLength.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://j2ee.netbeans.org/wsdl/AsyncLength/src/AsyncLengthCallback" location="AsyncLengthCallback.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://enterprise.netbeans.org/bpel/WizardCorrelationProperties" location="WizardCorrelationProperties.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <partnerLinks>
        <partnerLink name="LengthUnitProxy" partnerLinkType="ns4:AsyncLength" partnerRole="AsyncLengthPortTypeRole"/>
        <partnerLink name="Geocode" xmlns:tns="http://j2ee.netbeans.org/wsdl/CityDistance/src/Geocode" partnerLinkType="tns:RestOutboundWSDL" partnerRole="RestOutboundPortTypeRole"/>
        <partnerLink name="Distance" xmlns:tns="http://enterprise.netbeans.org/bpel/ServiceMaster.asmxWrapper" partnerLinkType="tns:ServiceMasterSoapLinkType" partnerRole="ServiceMasterSoapRole"/>
        <partnerLink name="Consumer" xmlns:tns="http://j2ee.netbeans.org/wsdl/CityDistance/src/CityDistance" partnerLinkType="tns:CityDistance" myRole="CityDistancePortTypeRole"/>
        <partnerLink name="LengthUnitCallback" partnerLinkType="ns3:AsyncLengthCallback" myRole="AsyncLengthCallbackPortTypeRole"/>
    </partnerLinks>
    <variables>
        <variable name="Measure" type="xsd:string"/>
        <variable name="To_faultVar" messageType="ns2:GetCityDistanceFault"/>
        <variable name="GetLineDistanceOut" xmlns:tns="GeodataService" messageType="tns:GetLineDistanceSoapOut"/>
        <variable name="GetLineDistanceIn" xmlns:tns="GeodataService" messageType="tns:GetLineDistanceSoapIn"/>
        <variable name="GetGeocodeOut2" xmlns:tns="http://j2ee.netbeans.org/wsdl/CityDistance/src/Geocode" messageType="tns:GetGeocodeResponse"/>
        <variable name="GetGeocodeIn2" xmlns:tns="http://j2ee.netbeans.org/wsdl/CityDistance/src/Geocode" messageType="tns:GetGeocodeRequest"/>
        <variable name="GetGeocodeOut1" xmlns:tns="http://j2ee.netbeans.org/wsdl/CityDistance/src/Geocode" messageType="tns:GetGeocodeResponse"/>
        <variable name="GetGeocodeIn1" xmlns:tns="http://j2ee.netbeans.org/wsdl/CityDistance/src/Geocode" messageType="tns:GetGeocodeRequest"/>
        <variable name="ChangeLengthUnitOut" xmlns:tns="http://j2ee.netbeans.org/wsdl/AsyncLength/src/AsyncLengthCallback" messageType="tns:ChangeLengthUnitCallbackRequest"/>
        <variable name="ChangeLengthUnitIn" xmlns:tns="http://j2ee.netbeans.org/wsdl/AsyncLength/src/AsyncLength" messageType="tns:ChangeLengthUnitRequest"/>
        <variable name="Output" xmlns:tns="http://j2ee.netbeans.org/wsdl/CityDistance/src/CityDistance" messageType="tns:GetCityDistanceResponse"/>
        <variable name="Input" xmlns:tns="http://j2ee.netbeans.org/wsdl/CityDistance/src/CityDistance" messageType="tns:GetCityDistanceRequest"/>
    </variables>
    <correlationSets>
        <correlationSet name="wzrd_set_InvokeLengthUnit_OnMessage_WaitResponse_ChangeLengthUnitCallback" properties="ns0:wzrd_prop_string_string"/>
        <correlationSet name="wzrd_set_InvokeLengthUnit_OnMessage_WaitResponse_ChangeLengthUnitCallback_1" properties="ns0:wzrd_prop_double_double"/>
        <correlationSet name="wzrd_set_InvokeLengthUnit_OnMessage_WaitResponse_ChangeLengthUnitCallback_2" properties="ns0:wzrd_prop_string_string2"/>
    </correlationSets>
    <faultHandlers>
        <catch faultName="ns2:to_fault">
            <sequence name="Sequence1">
                <assign name="AssignFaultInfo">
                    <copy>
                        <from>'timer expired'</from>
                        <to variable="To_faultVar" part="FaultInfo"/>
                    </copy>
                </assign>
                <reply name="ReplyFault" partnerLink="Consumer" operation="GetCityDistance" portType="ns2:CityDistancePortType" faultName="ns2:to_fault" variable="To_faultVar"/>
            </sequence>
        </catch>
    </faultHandlers>
    
        <sequence>
            <receive name="ReceiveInput" createInstance="yes" partnerLink="Consumer" operation="GetCityDistance" portType="ns2:CityDistancePortType" variable="Input"/>
                <flow name="Flow">
                    <scope name="ScopeA">
                            <faultHandlers>
                                    <catch faultName="ns6:a_reply_fault">
                                            <assign name="AssignLengthUnit">
                                                    <copy>
                                                            <from>1</from>
                                                            <to variable="ChangeLengthUnitOut" part="ChangeLengthUnitResponse"/>
                                                    </copy>
                                                    <copy>
                                                            <from variable="ChangeLengthUnitIn" part="fromLengthUnit"/>
                                                            <to variable="Measure"/>
                                                    </copy>
                                            </assign>
                                        </catch>
                            </faultHandlers>
                                <sequence name="SequenceA">
                                    <assign name="AssignLUIn">
                                            <copy>
                                                    <from variable="Input" part="LengthUnit"/>
                                                        <to variable="ChangeLengthUnitIn" part="toLengthUnit"/>
                                                </copy>
                                                <copy>
                                                    <from>'Kilometers'</from>
                                                        <to variable="ChangeLengthUnitIn" part="fromLengthUnit"/>
                                                </copy>
                                                <copy>
                                                    <from>1</from>
                                                        <to variable="ChangeLengthUnitIn" part="LengthValue"/>
                                                </copy>
                                        </assign>
                                        <invoke name="InvokeLUProxyOneWay" partnerLink="LengthUnitProxy" operation="ChangeLengthUnit" portType="ns4:AsyncLengthPortType" inputVariable="ChangeLengthUnitIn">
                                            <correlations>
                                                    <correlation set="wzrd_set_InvokeLengthUnit_OnMessage_WaitResponse_ChangeLengthUnitCallback" initiate="yes"/>
                                                        <correlation set="wzrd_set_InvokeLengthUnit_OnMessage_WaitResponse_ChangeLengthUnitCallback_1" initiate="yes"/>
                                                        <correlation set="wzrd_set_InvokeLengthUnit_OnMessage_WaitResponse_ChangeLengthUnitCallback_2" initiate="yes"/>
                                                </correlations>
                                        </invoke>
                                        <pick name="WaitResponse">
                                            <onMessage partnerLink="LengthUnitCallback" operation="ChangeLengthUnitCallback" portType="ns3:AsyncLengthCallbackPortType" variable="ChangeLengthUnitOut">
                                                    <correlations>
                                                            <correlation set="wzrd_set_InvokeLengthUnit_OnMessage_WaitResponse_ChangeLengthUnitCallback" initiate="no"/>
                                                                <correlation set="wzrd_set_InvokeLengthUnit_OnMessage_WaitResponse_ChangeLengthUnitCallback_1" initiate="no"/>
                                                                <correlation set="wzrd_set_InvokeLengthUnit_OnMessage_WaitResponse_ChangeLengthUnitCallback_2" initiate="no"/>
                                                        </correlations>
                                                        <sequence name="SequenceOnMsg">
                                                            <assign name="AssignMeasure">
                                                                    <copy>
                                                                            <from variable="ChangeLengthUnitOut" part="toLengthUnit"/>
                                                                                <to variable="Measure"/>
                                                                        </copy>
                                                                </assign>
                                                                <if name="CheckConditionA">
                                                                        <condition>$ChangeLengthUnitOut.ChangeLengthUnitResponse &gt; 3281</condition>
                                                                        <throw name="AReplyFault" faultName="ns6:a_reply_fault"/>
                                                                </if>
                                                        </sequence>
                                                </onMessage>
                                                <onAlarm>
                                                        <for>'P0Y0M0DT0H0M10.0S'</for>
                                                        <throw name="ThrowTOFault" faultName="ns2:to_fault"/>
                                                </onAlarm>
                                        </pick>
                                </sequence>
                        </scope>
                        <scope name="ScopeBC">
                            <faultHandlers>
                                    <catch faultName="ns6:b_reply_fault">
                                            <assign name="AssignDistance">
                                                    <copy>
                                                            <from>0</from>
                                                                <to>$GetLineDistanceOut.parameters/ns1:GetLineDistanceResult</to>
                                                        </copy>
                                                </assign>
                                        </catch>
                                </faultHandlers>
                                <sequence name="SequenceBC">
                                    <flow name="FlowB">
                                            <sequence name="SequenceGeocode1">
                                                    <assign name="AssignGeocodeIn1">
                                                            <copy>
                                                                    <from variable="Input" part="City1"/>
                                                                        <to variable="GetGeocodeIn1" sxnmp:nmProperty="org.glassfish.openesb.rest.params.city"/>
                                                                </copy>
                                                                <copy>
                                                                    <from variable="Input" part="Country1"/>
                                                                        <to variable="GetGeocodeIn1" sxnmp:nmProperty="org.glassfish.openesb.rest.params.country"/>
                                                                </copy>
                                                                <copy>
                                                                    <from>1</from>
                                                                        <to variable="GetGeocodeIn1" sxnmp:nmProperty="org.glassfish.openesb.rest.params.limit"/>
                                                                </copy>
                                                                <copy>
                                                                    <from>'xml'</from>
                                                                        <to variable="GetGeocodeIn1" sxnmp:nmProperty="org.glassfish.openesb.rest.params.format"/>
                                                                </copy>
                                                        </assign>
                                                        <invoke name="InvokeGeocode1" partnerLink="Geocode" operation="GetGeocode" portType="ns5:RestOutboundPortType" inputVariable="GetGeocodeIn1" outputVariable="GetGeocodeOut1"/>
                                                </sequence>
                                                <sequence name="SequenceGeocode2">
                                                    <assign name="AssignGeocode2">
                                                            <copy>
                                                                    <from variable="Input" part="City2"/>
                                                                        <to variable="GetGeocodeIn2" sxnmp:nmProperty="org.glassfish.openesb.rest.params.city"/>
                                                                </copy>
                                                                <copy>
                                                                    <from variable="Input" part="Country2"/>
                                                                        <to variable="GetGeocodeIn2" sxnmp:nmProperty="org.glassfish.openesb.rest.params.country"/>
                                                                </copy>
                                                                <copy>
                                                                    <from>1</from>
                                                                        <to variable="GetGeocodeIn2" sxnmp:nmProperty="org.glassfish.openesb.rest.params.limit"/>
                                                                </copy>
                                                                <copy>
                                                                    <from>'xml'</from>
                                                                        <to variable="GetGeocodeIn2" sxnmp:nmProperty="org.glassfish.openesb.rest.params.format"/>
                                                                </copy>
                                                        </assign>
                                                        <invoke name="InvokeGeocode2" partnerLink="Geocode" operation="GetGeocode" portType="ns5:RestOutboundPortType" inputVariable="GetGeocodeIn2" outputVariable="GetGeocodeOut2"/>
                                                </sequence>
                                        </flow>
                                        <assign name="AssignDistanceIn">
                                            <copy>
                                                    <from>substring-before(substring-after($GetGeocodeOut1.Info, "lon='"), "'")</from>
                                                        <to>$GetLineDistanceIn.parameters/ns1:InputLongitude1</to>
                                                </copy>
                                                <copy>
                                                    <from>substring-before(substring-after($GetGeocodeOut1.Info, "lat='"), "'")</from>
                                                        <to>$GetLineDistanceIn.parameters/ns1:InputLatitude1</to>
                                                </copy>
                                                <copy>
                                                    <from>substring-before(substring-after($GetGeocodeOut2.Info, "lon='"), "'")</from>
                                                        <to>$GetLineDistanceIn.parameters/ns1:InputLongitude2</to>
                                                </copy>
                                                <copy>
                                                    <from>substring-before(substring-after($GetGeocodeOut2.Info, "lat='"), "'")</from>
                                                        <to>$GetLineDistanceIn.parameters/ns1:InputLatitude2</to>
                                                </copy>
                                        </assign>
                                        <if name="CheckConditionB">
                                                <condition>'' = $GetLineDistanceIn.parameters/ns1:InputLongitude1 or '' = $GetLineDistanceIn.parameters/ns1:InputLongitude2</condition>
                                                <throw name="BReplyFault" faultName="ns6:b_reply_fault"/>
                                        </if>
                                        <invoke name="InvokeDistance" partnerLink="Distance" operation="GetLineDistance" portType="ns1:ServiceMasterSoap" inputVariable="GetLineDistanceIn" outputVariable="GetLineDistanceOut"/>
                                </sequence>
                        </scope>
                </flow>
                <assign name="AssignOutput">
                    <copy>
                            <from>$ChangeLengthUnitOut.ChangeLengthUnitResponse * $GetLineDistanceOut.parameters/ns1:GetLineDistanceResult/ns1:LineDistance</from>
                                <to variable="Output" part="Distance"/>
                        </copy>
                        <copy>
                            <from>substring-before(substring-after($GetGeocodeOut1.Info, "display_name='"), "'")</from>
                                <to variable="Output" part="CityInfo1"/>
                        </copy>
                        <copy>
                            <from>substring-before(substring-after($GetGeocodeOut2.Info, "display_name='"), "'")</from>
                                <to variable="Output" part="CityInfo2"/>
                        </copy>
                        <copy>
                            <from variable="Measure"/>
                                <to variable="Output" part="LengthUnitInfo"/>
                        </copy>
                </assign>
                <reply name="ReplyOutput" partnerLink="Consumer" operation="GetCityDistance" portType="ns2:CityDistancePortType" variable="Output"/>
        </sequence>
    
</process>
